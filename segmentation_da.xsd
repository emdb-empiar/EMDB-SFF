<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <xs:element name="segmentation">
        <xs:annotation>
            <xs:documentation>Link to assembly or component id.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="name" type="xs:string"/>
                <xs:element minOccurs="0" name="software" type="softwareType"/>
                <xs:element name="segmentList">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="segment" type="segmentType"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element minOccurs="0" name="details" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="segmentType">
        <xs:sequence>
            <xs:element name="biologicalAnnotation" type="xs:string" minOccurs="0"/>
            <xs:element name="complexesAndMacromolecules" type="macromoleculesAndComplexesType"
                minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Internal for EMDB archive</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="annotationLink" maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Needs to be defined in detail</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="link" type="xs:anyURI"/>
                        <xs:element name="identifier" type="xs:token"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:choice>
                <xs:element name="runLengthEncoding" type="runLengthEncodingType"/>
                <xs:element name="segmentLink">
                    <xs:annotation>
                        <xs:documentation>Are the CCP4 format masks going to be allowed? If so, we could represent the information of the mask (mapType) here.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="file" type="xs:token"/>
                            <xs:element minOccurs="0" name="objectPath" type="xs:token">
                                <xs:annotation>
                                    <xs:documentation>This is particularly relevant if all the segments are stored in one file, like in HDF5</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="contourLevel" type="xs:float">
                                <xs:annotation>
                                    <xs:documentation>Should be specified if map is non-binary</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="id" type="xs:positiveInteger" use="required"/>
        <xs:attribute name="parentSegmentID" type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>For the root segment: parentSegmentID = 0</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="macromoleculesAndComplexesType">
        <xs:annotation>
            <xs:documentation>Depending on the problem, one can either reference the sample on the macromolecule level or the complex level. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="macromoleculeID" type="xs:positiveInteger"/>
                <xs:element name="complexID" type="xs:positiveInteger"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="runLengthEncodingType">
        <xs:sequence>
            <xs:element name="string">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:pattern value="\d+(,\d+)+"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="offset" type="integerVectorType">
                <xs:annotation>
                    <xs:documentation>Offset of the segment relative to the orign map.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="boxSize" type="positiveIntegerVectorType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="integerVectorType">
        <xs:sequence>
            <xs:element name="x" type="xs:integer"/>
            <xs:element name="y" type="xs:integer"/>
            <xs:element name="z" type="xs:integer"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="positiveIntegerVectorType">
        <xs:sequence>
            <xs:element name="x" type="xs:positiveInteger"/>
            <xs:element name="y" type="xs:positiveInteger"/>
            <xs:element name="y" type="xs:positiveInteger"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="softwareType">
        <xs:sequence>
            <xs:element name="name" type="xs:token"/>
            <xs:element minOccurs="0" name="version" type="xs:token"/>
            <xs:element minOccurs="0" name="processingDetails" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
